import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

public class wabtecUIAssign {
	WebDriver driver;
	
	//this is the base test which will initialize the driver and launch the site onto chrome
	@BeforeClass
	void launchBrowser() {
		try {
			driver = new ChromeDriver();
			driver.manage().window().maximize();
			driver.get("https://www.hungryhowies.com/");
			driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
		} catch (Exception e) {
			System.out.println("Exception occured with message:"+ e.getMessage());
		}
	}
	
	//this tc will test the sign in form by inputting invalid data into the fields and then checking the 
	//messages accordingly
	@Test
	 void test1() {
		//dummy data to be used for input fields
		String userName= "ananay@gmail.com";
		String password="ananay99";
		WebDriverWait w=new WebDriverWait(driver, Duration.ofSeconds(10));
		try {
			//locating the login button and clicking it
			driver.findElement(By.xpath("//div[@id='block-storesearchdrawer']//a[@class='store-search__drawer__button'][normalize-space()='Order']")).click();
			driver.findElement(By.xpath("//a[normalize-space()='Log In']")).click();
			
			//locating and inputting data into username and password field
			driver.findElement(By.xpath("//input[@id='UserName']")).sendKeys(userName);
			driver.findElement(By.xpath("//input[@id='Password']")).sendKeys(password);
			
			//locating and clicking teh login button
			driver.findElement(By.xpath("//button[@id='btnLogin']")).click();
			
			//using explicit wait to wait for teh message box to pop up/appear
			w.until(ExpectedConditions.visibilityOf(driver.findElement(By.id("ui-id-1"))));
			WebElement errorMessageBox=w.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath("/html/body/div[5]"))));
			
			//confirming the error message box appears on screen
			if(errorMessageBox.isDisplayed()) {
				System.out.println("error message is being displayed");
			}
			else {
				throw new Exception("error message is not being displayed");
			}
			
			//getting the heading of message box
			String errorHeading=driver.findElement(By.id("ui-id-1")).getText();
			String expectedErrorHeading="OOPS!";
			//Asserting the heading with the intended Error heading
			Assert.assertEquals(errorHeading,expectedErrorHeading);
			
			
			//getting the description of the message box and asserting it with the expected error description
			String errorDescription=driver.findElement(By.xpath("//div[@id='Error']//div[@role='alert']")).getText();
			String expectedErrorDescription="Not valid\nThe user name or password provided is incorrect.";
			Assert.assertEquals(errorDescription,expectedErrorDescription );
			
			System.out.println("Test case finished and all assertions passed");
		}
		catch(Exception e) {
			System.out.println("Exception occured with msg: "+ e.getMessage());
		}
		//to close the chrome window even if exception occurs
		finally {
			if(driver != null) {
				driver.quit();
			}
		}
	}
}
